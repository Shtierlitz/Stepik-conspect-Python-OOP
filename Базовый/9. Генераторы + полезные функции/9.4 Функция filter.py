"""Функция filter для отбора значений итерируемых объектов"""

# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#
# b = filter(lambda x: x % 2 == 0, a)
# # for x in b:
# #     print(x)
# lst = list(b)
# print(lst)

# функция определения простого числа
# def is_simple(x):
#     d = x - 1
#     if d < 0:
#         return False
#     while d > 1:
#         if x % d == 0:
#             return False
#         d -= 1
#     return True
#
# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# b = filter(is_simple, a)
# lst = list(b)
# print(lst)

# Получаем только названия из букв
tup = ("Киев", "Днепропетровск", "Днепр1", "Запорожье", "Лисичанск2", "Чернигов")
b = filter(str.isalpha, tup)
tup2 = tuple(b)
print(tup2)

# Получема нечетные простые числа (вложенный)
# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# b = filter(is_simple, a)
# b2 = filter(lambda x: x % 2 != 0, filter(is_simple, a))
# print(list(b2))
import string

"""Подвиг 1. Вводятся названия городов в одну строчку через пробел. 
Необходимо определить функцию filter, которая бы возвращала только названия длиной более 5 символов. 
Извлеките первые три полученных значения с помощью функции next и отобразите их 
на экране в одну строчку через пробел. (Полагается, что минимум три значения имеются).

Sample Input:

Тула Ульяновск Хабаровск Владивосток Омск Уфа
Sample Output:

Ульяновск Хабаровск Владивосток"""

# # a = input().split()
# a = ['Тула', 'Ульяновск', 'Хабаровск', 'Владивосток', 'Омск', 'Уфа']
# filt = filter(lambda x: len(x) > 5, a)
# # for i in range(3):
# #     print(next(filt), end=" ")
#
# print(*(next(filt) for i in "="*3))


"""Подвиг 2. Вводится список предметов в виде списка:

название_1: вес_1
...
название_N: вес_N

С помощью функции map, необходимо сначала преобразовать этот список строк в кортеж, 
элементами которого также являются кортежи:

(('название_1', 'вес_1'), ..., ('название_N', 'вес_N'))

А, затем, отфильтровать (исключить) все предметы с весом менее 500, используя функцию filter. 
Вывести на экран список оставшихся предметов (только их названия) в одну строчку через пробел.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

зонт=1000
палатка=10000
спички=22
котелок=543
Sample Output:

зонт палатка котелок"""


import sys

# считывание списка из входного потока
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['зонт=1000', 'палатка=10000', 'спички=22', 'котелок=543']
# tp = tuple(map(lambda i: tuple(i.split("=")), lst_in))
# lst = list(filter(lambda x: x[0] if int(x[1]) > 500 else None, tp))
# print(lst)



"""Подвиг 3. Вводится список целых чисел в одну строчку через пробел. 
Необходимо оставить в нем только двузначные числа. Реализовать программу с использованием функции filter. 
Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.

Sample Input:

8 11 0 -23 140 1
Sample Output:

11 -23"""

# l = list(map(int, input().split()))
# l = [8, 11, 0, -23, 140, 1]
# def rang(x):
#     return -99 < x < -1 or 9 < x < 99
# lst = list(filter(rang, l))
# print(*lst)

# еще вариант
# print(*list(filter(lambda n: 9 < abs(n) < 99, l)))


"""Подвиг 4. Саша и Галя коллекционируют монетки. 
Каждый из них решил записать номиналы монеток из своей коллекции. 
Получилось два списка. Эти списки поступают на вход программы в виде двух строк из целых чисел, 
записанных через пробел. Необходимо выделить значения, 
присутствующие в обоих списках и оставить среди них только четные. 
Результат вывести на экран в виде строки полученных чисел в порядке их возрастания через пробел.

При реализации программы используйте функцию filter и кое-что еще (для упрощения программы), подумайте что.

Sample Input:

1 5 2 7 10 25 50 100
5 2 3 7 10 25 55
Sample Output:

2 10"""

# l1 = list(map(int, input().split()))
# l2 = list(map(int, input().split()))
# l1 = [1, 12, 5, 2, 7, 10, 25, 50, 100]
# l2 = [5, 12, 2, 3, 7, 10, 25, 55]
#
# print(*sorted(list(filter(lambda x: x % 2 == 0 if x in l2 else False, l1))))


"""Подвиг 5. Вводится список email-адресов в одну строчку через пробел. 
Среди них нужно оставить только корректно записанные адреса. 
Будем полагать, что к таким относятся те, что используют латинские буквы, цифры и 
символ подчеркивания. А также в адресе должен быть символ "@", 
а после него символ точки "." (между ними, конечно же, могут быть и другие символы).

Результат отобразить в виде строки email-адресов, записанных через пробел.

Sample Input:

abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com
Sample Output:

abc@it.ru biba123@list.ru sc_lib@list.ru"""

# from string import ascii_lowercase, digits
# # email = input().split()
# email = ['abc@it.ru', 'dfd3.ru@mail', 'biba123@list.ru', 'sc_lib@list.ru', '$fg9@fd.com']
#
# def get_email(x):
#     a = x.index("@")
#     check = digits+ascii_lowercase+"@_."
#     count = 0
#     for i in x:
#         if i not in check:
#             count += 1
#     if count:
#         return False
#     if x.count(".", a) == 1:
#         return True
#
# lst = list(filter(get_email, email))
# print(*lst)
