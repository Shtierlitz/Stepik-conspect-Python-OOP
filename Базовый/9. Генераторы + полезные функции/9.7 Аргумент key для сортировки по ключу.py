"""Аргумент key для сортировки по ключу"""

# ф определения четного и нечетного
# def is_odd(x):
#     return x % 2
#
# a = [4, 3, -10, 1, 7, 12]
# b = sorted(a, key=is_odd)
# print(b)      # [4, -10, 12, 3, 1, 7]

# проще через лямбду
# a = [4, 3, -10, 1, 7, 12]
# b = sorted(a, key=lambda x: x % 2)
# print(b)        # [4, -10, 12, 3, 1, 7]

# sort тоже имеет ключ
# a = [4, 3, -10, 1, 7, 12]
# a.sort(key=lambda x: x % 2)
# print(a)    # [4, -10, 12, 3, 1, 7]

# сортируем четные и не четные по возрастанию.
# def key_sort(x):
#     return x if x % 2 == 0 else x+100
#
# a = [4, 3, -10, 1, 7, 12]
# b = sorted(a, key=key_sort)
# print(b)      # [-10, 4, 12, 1, 3, 7]

# То же только через Лямбду
# a = [4, 3, -10, 1, 7, 12]
# b = sorted(a, key=lambda x: (x % 2, x))
# print(b)    # [-10, 4, 12, 1, 3, 7]
# функция возвращает кортеж, а сортировка идёт слева направо по его значениям
#  Если первый элемент меньше, то кортеж меньше, независимо от того чему равен второй элемент.
#  А если первые элементы равны, то тогда сравниваются вторые элементы и т.д.

# сортировка по длине строк
# lst = ["Киев", "Харьков", "Одесса", "Буча", "Хмельницкий"]
# b = sorted(lst, key=len)
# print(b)            # ['Киев', 'Буча', 'Одесса', 'Харьков', 'Хмельницкий']

# Сортировка по последнему символу слова
# lst = ["Киев", "Харьков", "Одесса", "Буча", "Хмельницкий"]
# b = sorted(lst, key=lambda x: x[-1])
# print(b)            # ['Одесса', 'Буча', 'Киев', 'Харьков', 'Хмельницкий']

#сортировка книжек по цене
# books = (
#     ("Евгений Онегин", "Пушкин А.С", 200),
#     ("Муму", "Тургенев И.С", 250),
#     ("Мастер и Маргарита", "Булгаков М.А.", 500),
#     ("Мертвые души", "Гоголь Н.В.", 190)
# )
# b = sorted(books, key=lambda x: x[-1])
# print(b)
# [('Мертвые души', 'Гоголь Н.В.', 190), ('Евгений Онегин', 'Пушкин А.С', 200), ('Муму', 'Тургенев И.С', 250), ('Мастер и Маргарита', 'Булгаков М.А.', 500)]


"""Подвиг 1. На вход программы поступает список наименований рек, 
записанных в одну строчку через пробел. 
Необходимо отсортировать этот список в порядке убывания длин названий. 
Результат вывести в одну строчку через пробел.

Sample Input:

Лена Енисей Волга Дон
Sample Output:

Енисей Волга Лена Дон"""


# lst_in = input().split()
# lst_in = ['Лена', 'Енисей', 'Волга', 'Дон']
# sort_lst = sorted(lst_in, key=len, reverse=True)
# print(*sort_lst)


"""Подвиг 2. На вход программы поступает строка в формате:

предмет_1=вес_1
...
предмет_N=вес_N

Веса предметов заданы целыми числами. 
Необходимо на основе этих данных сформировать словарь и, 
затем, на основе этого словаря сформировать список предметов по убыванию их веса. 
(В списке должны находиться только наименования предметов без их весов).

Отобразить полученный результат в виде строки с названиями через пробел.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

ножницы=100
котелок=500
спички=20
зажигалка=40
зеркальце=50
Sample Output:

котелок ножницы зеркальце зажигалка спички"""

# Мой вариант через функцию
import sys

# считывание списка из входного потока
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['ножницы=100', 'котелок=500', 'спички=20', 'зажигалка=40', 'зеркальце=50']


# def low_price(lst_in):
#     c = [i.split("=") for i in lst_in]
#     d = {int(c[i][1]): c[i][0] for i in range(len(c))}
#     dic = {key: value for value, key in d.items()}
#     res = sorted(dic, key=dic.get, reverse=True)
#     return res
#
#
# print(*low_price(lst_in))

# Вариант без функции
# s = dict(x.split("=") for x in lst_in)
# s = {k: int(v) for k, v in s.items()}
# d = sorted(s.items(), key=lambda x: x[-1], reverse=True)
# d = [x for x, _ in d]
# print(*d)

"""Подвиг 3. Известно, что порядок нот, следующий: до, ре, ми, фа, соль, ля, си. 
На вход программы поступает строка с набором этих нот, записанных через пробел. 
Необходимо сформировать список из входной строки с нотами, отсортированными указанным образом. 
Результат вывести в виде строки из нот, записанными через пробел.

Sample Input:

до фа соль до ре фа ля си
Sample Output:

до до ре фа фа соль ля си"""
# correct = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
# # lst_in = input().split()
# lst_in = ['до', 'фа', 'соль', 'до', 'ре', 'фа', 'ля', 'си']
# b = sorted(lst_in, key=lambda x: correct.index(x))
# print(*b)



"""Значимый подвиг 4. Имеется таблица с данными, представленная в формате:

Номер;Имя;Оценка;Зачет
1;Иванов;3;Да
2;Петров;2;Нет
...
N;Балакирев;4;Да

Эти данные необходимо представить в виде двумерного (вложенного) кортежа. Все числа должны быть представлены как целые числа. Затем, отсортировать данные так, чтобы столбцы шли в порядке:

Имя;Зачет;Оценка;Номер

Реализовать эту операцию с помощью сортировки. Результат должен быть представлен также в виде двумерного кортежа и присвоен переменной с именем t_sorted.

Программа ничего не должна выводить на экран, только формировать двумерный кортеж с переменной t_sorted.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

Номер;Имя;Оценка;Зачет
1;Портос;5;Да
2;Арамис;3;Да
3;Атос;4;Да
4;д'Артаньян;2;Нет
5;Балакирев;1;Нет
Sample Output:

True"""

import sys

# считывание списка из входного потока (не меняйте переменную lst_in в программе)
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = [
#     'Номер;Имя;Оценка;Зачет',
#     '1;Портос;5;Да',
#     '2;Арамис;3;Да',
#     '3;Атос;4;Да',
#     "4;д'Артаньян;2;Нет",
#     '5;Балакирев;1;Нет']

# ответ как должно быть
# (('Имя', 'Зачет', 'Оценка', 'Номер'),
# ('Портос', 'Да', 5, 1),
# ('Арамис', 'Да', 3, 2),
# ('Атос', 'Да', 4, 3),
# ("д'Артаньян", 'Нет', 2, 4),
# ('Балакирев', 'Нет', 1, 5))

# как стоило бы сделать
# ind = [3, 0, 2, 1]
# t_sorted = tuple(tuple(int(s) if s.isdigit() else s for s in x.split(';')) for x in lst_in)
# t_sorted = tuple(tuple(x) for x in [sorted(x, key=lambda i: ind[x.index(i)]) for x in t_sorted])
#
# print(t_sorted)


# мой вариант
# l = [i.split(";") for i in lst_in]
# for i in l:
#     i[0], i[1], i[2], i[3] = i[1], i[3], i[2], i[0]
#
# for i in l:
#     for j in i:
#         if j.isdigit():
#             val = int(j)
#             ind = i.index(j)
#             i.remove(j)
#             i.insert(ind, val)
#         else:
#             pass
#
# t_sorted = tuple(tuple(i for i in j) for j in l)


"""Подвиг 5. Известно, что звания военнослужащих имеют следующий порядок:

рядовой, сержант, старшина, прапорщик, лейтенант, капитан, майор, подполковник, полковник

На вход поступает список военнослужащих в формате:

имя_1=звание_1
...
имя_N=звание_N

Необходимо входные данные представить в виде вложенного списка вида:

[['имя_1', 'звание_1'], ['имя_2', 'звание_2'], ..., ['имя_N', 'звание_N']]

Этот список присвоить переменной с именем lst. Затем, отсортировать его по возрастанию званий.
Выводить на экран ничего не нужно, только сформировать список и указать на него переменную lst.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

Атос=лейтенант
Портос=прапорщик
д'Артаньян=капитан
Арамис=лейтенант
Балакирев=рядовой
Sample Output:

True"""

# import sys
#
# # считывание списка из входного потока (переменную lst_in не менять)
# lst_in = list(map(str.strip, sys.stdin.readlines()))
lst_in = ['Атос=лейтенант', 'Портос=прапорщик', "д'Артаньян=капитан", 'Арамис=лейтенант', 'Балакирев=рядовой']
correct = ['рядовой', 'сержант', 'старшина', 'прапорщик', 'лейтенант', 'капитан', 'майор', 'подполковник', 'полковник']
ls = [i.split("=") for i in lst_in]
lst = sorted(ls, key=lambda x: correct.index(x[-1]))
print(lst)


