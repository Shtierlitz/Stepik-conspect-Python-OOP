"""#34. Генераторы множеств и генераторы словарей"""

# a = [x ** 2 for x in range(1, 5)] # Генератор списков
# a = {x ** 2 for x in range(1, 5)} # Генератор множеств {16, 1, 4, 9}
# a = {x: x ** 2 for x in range(1, 5)} # Генератор словарей {1: 1, 2: 4, 3: 9, 4: 16}

# делаем все ключи заглавными
# m = {"неудовл": 2, "удовл": 3, "хорошо": "4", "отлично": "5"}
# a = {key.upper(): int(value) for key, value in m.items()}
# print(a) # {'НЕУДОВЛ': 2, 'УДОВЛ': 3, 'ХОРОШО': 4, 'ОТЛИЧНО': 5}

# делаем все числа положительными
# d = [1, 2, "1", "2", -4, 3, 4]
# a = {int(x) for x in d if int(x) > 0}
# print(a)    # {1, 2, 3, 4}

# генератор словаря с условием меняем улючи со значениями и выбрать только от 2 до 5
# m = {"безнадежно": 0, "убого": 1, "неудовл": 2, "удовл": 3, "хорошо": "4", "отлично": "5"}
# a = {int(value): key for key, value in m.items() if 2 <= int(value) <= 5}
# print(a)    # {2: 'неудовл', 3: 'удовл', 4: 'хорошо', 5: 'отлично'}

"""Подвиг 2. Вводится строка со списком оценок, например:

2 неудовлетворительно удовлетворительно хорошо отлично

Первая цифра - это числовое значение первой оценки. 
Остальные оценки имеют возрастающие на 1 числа. 
С помощью генератора словарей необходимо сформировать словарь d, 
где ключами будут выступать числа, а значениями - слова.
Например:

d = {2: 'неудовлетворительно', 3: 'удовлетворительно', 4: 'хорошо', 5: 'отлично'}

Вывести на экран значение сформированного словаря с ключом 4.

Sample Input:

1 ужасно неудовлетворительно удовлетворительно прилично отлично
Sample Output:

прилично"""
# lst = ['1', 'ужасно', 'неудовлетворительно', 'удовлетворительно', 'прилично', 'отлично']
# # lst = list(input().split())
# p = int(lst.pop(0))
# d = {p+key: lst[key] for key in range(len(lst))} # Тут первый индекс добавляет к себе еще один чтобы не начинать с 1
# print(d[4])
#
# for key in range(len(lst)):
#     d = p+key[lst[key]]
# print(d)


"""Подвиг 3. На автомойку в течение квартала заезжали машины. 
Их гос. номера фиксировались в журнале, следующим образом (пример):

Е220СК
А120МВ
В101АА
Е220СК
А120МВ

На основе такого списка через генератор множеств сформировать список уникальных машин. 
На экран вывести число уникальных машин.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

А323ГД
Д456ВВ
Б001ББ
Д456ВВ
С111СС
Sample Output:

4"""

import sys

# считывание списка из входного потока
# lst_in = ['А323ГД', 'Д456ВВ', 'Б001ББ', 'Д456ВВ', 'С111СС']
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# s = {i for i in lst_in}
# print(len(s))

"""Подвиг 4. Вводится текст в одну строчку со словами через пробел. 
С помощью генератора множеств сформировать множество из уникальных слов 
без учета регистра и длина которых не менее трех символов. Вывести на экран размер этого множества.

Sample Input:

Хижина изба машина и снова хижина машина
Sample Output:

4"""

# s = {i.lower() for i in input().split() if len(i) >= 3}
# print(len(s))

"""Подвиг 5. Вводится текст в одну строчку со словами через пробел. 
Используя генераторы множеств и словарей, сформировать словарь в формате:

{слово_1: количество_1, слово_2: количество_2, ..., слово_N: количество_N}

То есть, ключами выступают уникальные слова (без учета регистра), 
а значениями - число их встречаемости в тексте. 
На экран вывести значение словаря для слова (союза) 'и'. Если такого ключа нет, то вывести 0.

Sample Input:

И что сказать и что сказать и нечего и точка
Sample Output:

4"""

# Мой вариант, но range тут лишний
# lst = ['и', 'что', 'сказать', 'и', 'что', 'сказать', 'и', 'нечего', 'и', 'точка']
# lst = input().lower().split()
# count = {lst[key]: lst.count(lst[key]) for key in range(len(lst))}
# print(count["и"] if "и" in count else 0)
#
# # исправил
# count = {key: lst.count(key) for key in lst}
# print(count.get("и", 0))


"""Подвиг 6. Вводится список книг книжного магазина в формате:

<автор 1>:<название 1>
...
<автор N>:<название N>

Авторы с названиями могут повторяться. Необходимо, используя генераторы, сформировать словарь с именем d вида:

{'автор 1': {'название 1', 'название 2', ..., 'название M'}, ..., 
'автор K': {'название 1', 'название 2', ..., 'название S'}}

То есть, ключами выступают уникальные авторы,
 а значениями - множества с уникальными названиями книг соответствующего автора.

На экран ничего выводить не нужно, 
только сформировать словарь обязательно с именем d - он, далее будет проверяться в тестах!

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:

Пушкин: Сказака о рыбаке и рыбке
Есенин: Письмо к женщине
Тургенев: Муму
Пушкин: Евгений Онегин
Есенин: Русь
Sample Output:

True"""

import sys

# считывание списка из входного потока
lst_in = ['Пушкин: Сказака о рыбаке и рыбке',
          'Есенин: Письмо к женщине',
          'Тургенев: Муму',
          'Пушкин: Евгений Онегин',
          'Есенин: Русь']
# lst_in = list(map(str.strip, sys.stdin.readlines()))
lst = [[i.split(":")[0], i.split(":")[1].strip()] for i in lst_in]
d = {}
for i in (lst):
    kod = i[0]
    if kod not in d:
        d[kod] = {i[1]}
    else:
        d[kod].add(i[1])
print(d)
