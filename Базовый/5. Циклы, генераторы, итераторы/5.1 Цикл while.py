'''Цикл while'''

"""Подвиг 2. Вводятся два целых положительных числа n и m, причем, n < m. 
Вывести в строку через пробел квадраты целых чисел в диапазоне [n; m]. 
Программу реализовать при помощи цикла while.

Sample Input:

2 4
Sample Output:

4 9 16"""

# n, m = map(int, input().split())
# lst = []
# while n <= m:
#     lst.append(n**2)
#     n += 1
# print(*lst)

"""Подвиг 3. Вводится стоимость одной книги x рублей (вещественное число). 
Необходимо вывести на экран в строчку через пробел стоимости 2, 3, ... 10 таких книг с точностью до десятых.
 Программу реализовать при помощи цикла while.

Sample Input:

34.6
Sample Output:

69.2 103.8 138.4 173.0 207.6 242.2 276.8 311.4 346.0"""

# x = float(input())
# z = x
# N = 10
# Y = 1
# while Y < N:
#     x = x + z
#     Y += 1
#     print(round(x, 2), end=" ")

"""Подвиг 4. Вводится целое положительное число n. 
Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n с точностью до тысячных
 (три знака после запятой). 
 Программу реализовать при помощи цикла while.

Sample Input:

8
Sample Output:

2.718"""

# n = int(input())
# y = 1
# x = 1
# c = 0
# while y <= n:
#     a = x / y
#     c += a
#     y += 1
#
# print(round(c, 3))
# print(1+1/2+1/3+1/4+1/5+1/6+1/7+1/8)

"""Подвиг 5. На каждой итерации цикла пользователь вводит целое число. 
Цикл продолжается, пока не встретится число 0. 
Необходимо вычислить сумму введенных в цикле чисел и вывести результат на экран. 
Программу реализовать при помощи цикла while.

Sample Input:

8
11
2
-4
0
Sample Output:

17"""

# k = 0
# while True:
#     n = int(input())
#     if n != 0:
#         k += n
#     else:
#         break
# print(k)

"""Подвиг 6. Вводится строка (слаг). 
Замените в этой строке все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-). 
Результат преобразования строки выведите на экран. 
Программу реализовать при помощи цикла while.

Sample Input:

osnovnye--metody-----slovarey
Sample Output:

osnovnye-metody-slovarey"""

phrase = "osnovnye--metody-----slovarey"

# Лгичный способ без цикла
# b = phrase.replace("-", " ").split()
# c = "-".join(b)
# print(c)

# phrase = input()
# lst = list(phrase)
# count = lst.count("-")
# s = 0
# while s < count:
#     index = lst.index("-")
#     lst.remove("-")
#     lst.insert(index, " ")
#     s += 1
# n_string = ''.join(lst)
# result = n_string.split()
# print("-".join(result))

# Женин вариант
# i = 0
# while i < len(phrase) - 1:
#     if phrase[i] == "-" and phrase[i+1] == phrase[i]:
#         phrase = phrase[:i] + phrase[i+1:]
#     else:
#         i += 1
# print(phrase)


"""Подвиг 7. Вводится натуральное (то есть, целое положительное) число (от трехзначного и более). 
Найти произведение всех его цифр. 
Результат вывести на экран. 
Программу реализовать при помощи цикла while.

Sample Input:

821
Sample Output:

16"""

# костыль который работает тольео с 3 числами
# input_num = "821"
# num = list(input_num)
# i = 0
# s = 0
# lst = num.copy()
# lst2 = []
# result = 0
# result1 = int(num[0])
# result2 = 0
# while s != len(num):
#     if len(lst) == 1:
#         break
#     else:
#         result = result2 * int(lst[i+1])
#         lst2.append(result)
#         print(result)
#         result1 = int(lst[i]) * int(lst[i+1])
#         result2 = result1
#         del lst[0]
#         s += 1
# print(lst2[-1])

# норм рабочая
# input_num = input()
# result = 1
# s = 0
# while s != len(input_num):
#     if s != len(input_num):
#         result = result * int(input_num[s])
#         s += 1
#     else:
#         break
# print(result)

"""Подвиг 8. Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, 
а каждое последующее равно сумме двух предыдущих. 
Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ... 
Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры).
 Результат отобразите в виде строки полученных чисел, записанных через пробел. 
 Программу реализовать при помощи цикла while.

Sample Input:

8
Sample Output:

1 1 2 3 5 8 13 21"""

# мой вариант
# length = int(input())
# z = 0
# fib0 = 1
# fib1 = 1
# lst = [1, 1]
# while z <= length -3:
#     fib0, fib1 = fib1, fib0 + fib1
#     lst.append(fib1)
#     z += 1
# print(*lst)

# Вариант людей
# a = int(input())
# x = 0
# z = 1
# j = 0
# while x != a:
#     print(z, end=' ')
#     j,z = z, j
#     z = z + j
#     x+=1

"""Подвиг 9. Одноклеточная амеба каждые 3 часа делится на 2 клетки. 
Определить, сколько клеток будет через n часов (n - целое положительное число, вводимое с клавиатуры).
 Считать, что изначально была одна амеба. 
 Результат вывести на экран. Задачу необходимо решить с использованием цикла while.

Sample Input:

11
Sample Output:

8"""
# num_input = int(input()) // 3
# i = 1
# t = 1
# while t <= num_input:
#     i *= 2
#     t += 1
# print(i)

"""Подвиг 10. Гражданин 1 января открыл счет в банке, вложив 1000 руб. 
Каждый год размер вклада увеличивается на 5% от имеющейся суммы. 
Определить сумму вклада через n лет (n - целое положительное число, вводимое с клавиатуры). 
Результат округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.

Sample Input:

5
Sample Output:

1276.28"""
# years = int(input())
# z = 0
# a = 1000
# c = 0
# while z < years:
#     b = a * 0.05
#     c = a + b
#     a = c
#     z += 1
# print(round(c, 2))

"""Подвиг 11. Вводятся два натуральных четных числа n и m в одну строчку через пробел, 
причем n < m. Напечатать все нечетные числа из интервала [n, m]. 
Задачу решить без применения условного оператора. 
Результат вывести на экран в виде строки чисел, записанных через пробел. 
Программу реализовать при помощи цикла while.

Sample Input:

2 10
Sample Output:

3 5 7 9"""

# num_les, num_more = map(int, input().split())
# while num_les <= num_more:
#     while num_les % 2 != 0:
#         print(num_les, end=" ")
#         num_les += 1
#     num_les += 1


"""Подвиг 12. Составить программу поиска всех трехзначных чисел, 
которые при делении на 47 дают в остатке 43 и кратны 3. 
Вывести найденные числа в строчку через пробел. 
Программу реализовать при помощи цикла while.

Sample Input:

Sample Output:

231 372 513 654 795 936"""

# les = 100
# more = 1000
# while les <= more:
#     while les % 3 == 0 and les % 47 == 43:
#         print(les, end=" ")
#         les += 1
#     les += 1

# Пример Жени
# i = 43 + 47*4
# while i < 1000:
#     print(i, end = " ")
#     i += 47*3

